@online{lets_encrypt_new_crl,
	title = {A New Life for Certificate Revocation Lists},
	url = {https://letsencrypt.org/2022/09/07/new-life-for-crls/},
	abstract = {This month, Let\&rsquo;s Encrypt is turning on new infrastructure to support revoking certificates via Certificate Revocation Lists. Despite having been largely supplanted by the Online Certificate Status Protocol for over a decade now, {CRLs} are gaining new life with recent browser updates. By collecting and summarizing {CRLs} for their users, browsers are making reliable revocation of certificates a reality, improving both security and privacy on the web. Let\&rsquo;s talk about exactly what this new infrastructure does, and why it\&rsquo;s important.},
	titleaddon = {Let's Encrypt},
	author = {{Aaron Gable}},
	urldate = {2024-10-31},
	date = {2022-09-07},
	langid = {american},
}

@report{rfc_rpki,
	title = {A Profile for X.509 {PKIX} Resource Certificates},
	abstract = {This document defines a standard profile for X.509 certificates for the purpose of supporting validation of assertions of "right-of-use" of Internet Number Resources ({INRs}). The certificates issued under this profile are used to convey the issuer's authorization of the subject to be regarded as the current holder of a "right-of-use" of the {INRs} that are described in the certificate. This document contains the normative specification of Certificate and Certificate Revocation List ({CRL}) syntax in the Resource Public Key Infrastructure ({RPKI}). This document also specifies profiles for the format of certificate requests and specifies the Relying Party {RPKI} certificate path validation procedure. [{STANDARDS}-{TRACK}]},
	number = {{RFC} 6487},
	institution = {Internet Engineering Task Force},
	type = {Request for Comments},
	author = {Huston, Geoff and Loomans, Robert and Michaelson, George G.},
	date = {2012-02},
	doi = {10.17487/RFC6487},
}

@online{apple_cert_lifetime,
	title = {About upcoming limits on trusted certificates},
	url = {https://support.apple.com/en-us/102028},
	abstract = {In our ongoing efforts to improve web security for our users, Apple is reducing the maximum allowed lifetimes of {TLS} server certificates.},
	titleaddon = {Apple Support},
	urldate = {2024-09-22},
	date = {2023-08-21},
	langid = {english},
}

@online{add_mtc_tai,
	title = {Adopt `{TrustAnchorIdentifiers}` from v03 of {MTC} draft by pohlm01 · Pull Request \#5 · bwesterb/mtc},
	url = {https://github.com/bwesterb/mtc/pull/5},
	author = {{Maximilian Pohl}},
	urldate = {2024-11-19},
}

@online{fix_mtc_length_prefix_2,
	title = {Adopt tests for fixed length prefix in \#2 by pohlm01 · Pull Request \#4 · bwesterb/mtc},
	url = {https://github.com/bwesterb/mtc/pull/4},
	abstract = {Apparently, I forgot adopting the test cases with the last {PR}. Here it is.},
	titleaddon = {{GitHub}},
	author = {{Maximilian Pohl}},
	urldate = {2024-11-19},
	langid = {english},
}

@online{fix_mtc_tai,
	title = {Adopt to davidben/merkle-tree-certs\#91 by pohlm01 · Pull Request \#8 · bwesterb/mtc},
	url = {https://github.com/bwesterb/mtc/pull/8},
	abstract = {As part of davidben/merkle-tree-certs\#91, we adopted the hash structs to make proper use of the batch-specific Trust Anchor Identifiers.  This {PR} adopts the code accordingly.},
	titleaddon = {{GitHub}},
	author = {{Maximilian Pohl}},
	urldate = {2024-11-19},
	langid = {english},
}

@online{supersede_certificate_type,
	title = {Adoptions to supersede `server/client\_certificate\_type` extensions · Issue \#76 · davidben/tls-trust-expressions},
	url = {https://github.com/davidben/tls-trust-expressions/issues/76},
	abstract = {Merkle Tree Certificates require the trust\_anchors extension defined in this repository, as well as the server\_certificate\_type and client\_certificate\_type extensions defined in {RFC} 7250 (raw publi...},
	titleaddon = {{GitHub}},
	author = {{Maximilian Pohl}},
	urldate = {2024-11-19},
	langid = {english},
}

@online{apple_enforce_ct,
	title = {Apple's Certificate Transparency policy – Apple Support ({UK})},
	url = {https://support.apple.com/en-gb/103214},
	abstract = {Find out how to comply with Apple's Certificate Transparency policy.},
	titleaddon = {Apple Support},
	urldate = {2024-09-22},
	date = {2023-11-30},
}

@report{rfc_acme,
	title = {Automatic Certificate Management Environment ({ACME})},
	url = {https://datatracker.ietf.org/doc/rfc8555},
	abstract = {Public Key Infrastructure using X.509 ({PKIX}) certificates are used for a number of purposes, the most significant of which is the authentication of domain names. Thus, certification authorities ({CAs}) in the Web {PKI} are trusted to verify that an applicant for a certificate legitimately represents the domain name(s) in the certificate. As of this writing, this verification is done through a collection of ad hoc mechanisms. This document describes a protocol that a {CA} and an applicant can use to automate the process of verification and certificate issuance. The protocol also provides facilities for other certificate management functions, such as certificate revocation.},
	number = {{RFC} 8555},
	institution = {Internet Engineering Task Force},
	type = {Request for Comments},
	author = {Barnes, Richard and Hoffman-Andrews, Jacob and {McCarney}, Daniel and Kasten, James},
	urldate = {2024-09-21},
	date = {2019-03},
	doi = {10.17487/RFC8555},
}

@software{cab_ocsp_optional_crl_mandatory,
	title = {Baseline Requirements for the Issuance and Management of Publicly-Trusted {TLS} Server Certificates},
	url = {https://github.com/cabforum/servercert/blob/d820f37f9e1550805c210dcaf5162b7f86ccfb69/docs/BR.md},
	abstract = {Repository for the {CA}/Browser Forum Server Certificate Chartered Working Group - cabforum/servercert},
	version = {2.0.8},
	author = {{Iñigo Barreira} and {Clint Wilson}},
	urldate = {2024-10-31},
	date = {2024-10-02},
}

@online{chrome_cert_lifetime,
	title = {Certificate Lifetimes},
	url = {https://chromium.googlesource.com/chromium/src/+/b9ee8e9f75279615be7c153ce2520a40cec4c14f/net/docs/certificate_lifetimes.md},
	author = {{Ryan Sleevi}},
	urldate = {2024-09-22},
	date = {2020-06-23},
}

@report{rfc_ct,
	title = {Certificate Transparency},
	url = {https://datatracker.ietf.org/doc/rfc6962},
	abstract = {This document describes an experimental protocol for publicly logging the existence of Transport Layer Security ({TLS}) certificates as they are issued or observed, in a manner that allows anyone to audit certificate authority ({CA}) activity and notice the issuance of suspect certificates as well as to audit the certificate logs themselves. The intent is that eventually clients would refuse to honor certificates that do not appear in a log, effectively forcing {CAs} to add all issued certificates to the logs. Logs are network services that implement the protocol operations for submissions and queries that are defined in this document.},
	number = {{RFC} 6962},
	institution = {Internet Engineering Task Force},
	type = {Request for Comments},
	author = {Laurie, Ben and Langley, Adam and Kasper, Emilia},
	urldate = {2024-11-14},
	date = {2013-06},
	doi = {10.17487/RFC6962},
}

@online{chrome_enforce_ct,
	title = {Certificate Transparency Enforcement in Google Chrome},
	url = {https://groups.google.com/a/chromium.org/g/ct-policy/c/wHILiYf31DE/m/iMFmpMEkAQAJ},
	author = {{Devon O'Brien}},
	urldate = {2024-09-22},
	date = {2018-07-02},
}

@online{lets_encrypt_challange_types,
	title = {Challenge Types},
	url = {https://letsencrypt.org/docs/challenge-types/},
	abstract = {When you get a certificate from Let’s Encrypt, our servers validate that you control the domain names in that certificate using “challenges,” as defined by the {ACME} standard. Most of the time, this validation is handled automatically by your {ACME} client, but if you need to make some more complex configuration decisions, it’s useful to know more about them. If you’re unsure, go with your client’s defaults or with {HTTP}-01.},
	urldate = {2024-10-31},
	date = {2023-02-13},
	langid = {american},
}

@online{chrome_root_store,
	title = {Chrome root store},
	url = {https://chromium.googlesource.com/chromium/src/+/main/net/data/ssl/chrome_root_store/root_store.md},
	urldate = {2024-11-06},
	note = {Version: 17},
}

@online{fix_consitently_use_tai,
	title = {Consistently use {TAI} instead of issuer\_id by pohlm01 · Pull Request \#91 · davidben/merkle-tree-certs},
	url = {https://github.com/davidben/merkle-tree-certs/pull/91},
	abstract = {I suggest replacing current opaque issuer\_id\&lt;1..32\&gt;; fields with the new {TrustAnchorIdentifier} trust\_anchor;. Alternatively, we would need to adopt the maximal number of bytes to  opaque issu...},
	titleaddon = {{GitHub}},
	author = {{Maximilian Pohl}},
	urldate = {2024-11-19},
	langid = {english},
}

@online{fix_mtc_length_prefix_3,
	title = {Corrects test vectors based on a wrong length encoding of the {DNS} name by pohlm01 · Pull Request \#90 · davidben/merkle-tree-certs},
	url = {https://github.com/davidben/merkle-tree-certs/pull/90},
	abstract = {See bwesterb/mtc\#2 and bwesterb/mtc\#4},
	titleaddon = {{GitHub}},
	author = {{Maximilian Pohl}},
	urldate = {2024-11-19},
	langid = {english},
}

@inproceedings{crlite_paper,
	title = {{CRLite}: A Scalable System for Pushing All {TLS} Revocations to All Browsers},
	url = {https://ieeexplore.ieee.org/document/7958597},
	doi = {10.1109/SP.2017.17},
	shorttitle = {{CRLite}},
	abstract = {Currently, no major browser fully checks for {TLS}/{SSL} certificate revocations. This is largely due to the fact that the deployed mechanisms for disseminating revocations ({CRLs}, {OCSP}, {OCSP} Stapling, {CRLSet}, and {OneCRL}) are each either incomplete, insecure, inefficient, slow to update, not private, or some combination thereof. In this paper, we present {CRLite}, an efficient and easily-deployable system for proactively pushing all {TLS} certificate revocations to browsers. {CRLite} servers aggregate revocation information for all known, valid {TLS} certificates on the web, and store them in a space-efficient filter cascade data structure. Browsers periodically download and use this data to check for revocations of observed certificates in real-time. {CRLite} does not require any additional trust beyond the existing {PKI}, and it allows clients to adopt a fail-closed security posture even in the face of network errors or attacks that make revocation information temporarily unavailable. We present a prototype of name that processes {TLS} certificates gathered by Rapid7, the University of Michigan, and Google's Certificate Transparency on the server-side, with a Firefox extension on the client-side. Comparing {CRLite} to an idealized browser that performs correct {CRL}/{OCSP} checking, we show that {CRLite} reduces latency and eliminates privacy concerns. Moreover, {CRLite} has low bandwidth costs: it can represent all certificates with an initial download of 10 {MB} (less than 1 byte per revocation) followed by daily updates of 580 {KB} on average. Taken together, our results demonstrate that complete {TLS}/{SSL} revocation checking is within reach for all clients.},
	eventtitle = {2017 {IEEE} Symposium on Security and Privacy ({SP})},
	pages = {539--556},
	booktitle = {2017 {IEEE} Symposium on Security and Privacy ({SP})},
	author = {Larisch, James and Choffnes, David and Levin, Dave and Maggs, Bruce M. and Mislove, Alan and Wilson, Christo},
	urldate = {2024-10-31},
	date = {2017-05},
	note = {{ISSN}: 2375-1207},
	keywords = {Bloom filter, Browsers, {CRL}, Certificate Transparency, Cryptography, {OCSP}, Privacy, Protocols, Prototypes, Revocation, Servers, Transport Layer Security},
}

@online{chrome_crlsets,
	title = {{CRLSets}},
	url = {https://www.chromium.org/Home/chromium-security/crlsets/},
	urldate = {2024-10-31},
}

@online{debian_ca_certificates,
	title = {Debian -- Details of package ca-certificates in bookworm},
	url = {https://packages.debian.org/bookworm/ca-certificates},
	urldate = {2024-11-13},
}

@online{file_structure,
	title = {Default file structure for {RP} and {AP} · Issue \#97 · davidben/merkle-tree-certs},
	url = {https://github.com/davidben/merkle-tree-certs/issues/97},
	abstract = {Operating systems often ship a list of trusted certificates in a well-known location. The go source code is a nice place for an overview of where Linux stores its trusted roots. It might be nice to...},
	titleaddon = {{GitHub}},
	author = {{Maximilian Pohl}},
	urldate = {2024-11-19},
	langid = {english},
}

@online{apple_drop_tls,
	title = {Deprecation of Legacy {TLS} 1.0 and 1.1 Versions},
	url = {https://webkit.org/blog/8462/deprecation-of-legacy-tls-1-0-and-1-1-versions/},
	abstract = {Transport Layer Security ({TLS}) is a critical security protocol used to protect web traffic.},
	titleaddon = {{WebKit}},
	author = {Wood, Christopher},
	urldate = {2024-09-23},
	date = {2018-10-15},
}

@article{diginotar,
	title = {{DigiNotar}: Dissecting the First Dutch Digital Disaster},
	volume = {6},
	issn = {1944-0464, 1944-0472},
	doi = {10.5038/1944-0472.6.2.4},
	shorttitle = {{DigiNotar}},
	abstract = {In the middle of the night on September 2, 2011, the Dutch Minister of the Interior and Kingdom Relations held an emergency press conference. {DigiNotar}, a Certificate Authority ({CA}), had been electronically ‘broken into’ and as a result intruders had managed to generate falsified certificates. As a {CA}, {DigiNotar} issued digital certificates to secure digital communication, but as a result of the breach the authenticity of such certificates could no longer be verified. The Dutch government subsequently revoked its trust in all certificates issued by {DigiNotar}. This was the beginning of the first digital disaster in the Netherlands. As a pioneering disaster, this article focuses on the implications of {DigiNotar} as a vital case study for future scenarios of digital disaster management. The main focus of this article is on the underlying ‘weaknesses’ of the {DigiNotar} incident, which allowed the situation to evolve from a problem into a disaster. These include lack of oversight, lack of security attention and risk awareness and the absence of an effective mitigation strategy. By identifying and subsequently analyzing the underlying problems, this article aims to demonstrate how future situations can be better contained if sufficient attention is granted to these factors and subsequent changes are introduced.},
	pages = {46--58},
	number = {2},
	journaltitle = {Journal of Strategic Security},
	shortjournal = {{JSS}},
	author = {Van Der Meulen, Nicole},
	date = {2013-06},
	langid = {english},
}

@online{cloudflare_radar_domains,
	title = {Domain Rankings Worldwide {\textbar} Cloudflare Radar},
	url = {https://radar.cloudflare.com/domains},
	abstract = {Explore the latest global domain rankings, including the top 100 domains by category, trending domains, and detailed lists up to 1,000,000 entries.},
	urldate = {2024-11-06},
	date = {2024-11-06},
}

@inproceedings{falcon_down,
	title = {{FALCON} Down: Breaking {FALCON} Post-Quantum Signature Scheme through Side-Channel Attacks},
	doi = {10.1109/DAC18074.2021.9586131},
	shorttitle = {{FALCON} Down},
	abstract = {This paper proposes the first side-channel attack on {FALCON}—a {NIST} Round-3 finalist for the post-quantum digital signature standard. We demonstrate a known-plaintext attack that uses the electromagnetic measurements of the device to extract the secret signing keys, which then can be used to forge signatures on arbitrary messages. The proposed attack targets the unique floating-point multiplications within {FALCON}’s Fast Fourier Transform through a novel extend-and-prune strategy that extracts the sign, mantissa, and exponent variables without false positives. The extracted floating-point values are then mapped back to the secret key’s coefficients. Our attack, notably, does not require pre-characterizing the power profile of the target device or crafting special inputs. Instead, the statistical differences on obtained traces are sufficient to successfully execute our proposed differential electromagnetic analysis. The results on an {ARM}-Cortex-M4 running the {FALCON} {NIST}’s reference software show that approximately 10k measurements are sufficient to extract the entire key.},
	eventtitle = {2021 58th {ACM}/{IEEE} Design Automation Conference ({DAC})},
	pages = {691--696},
	booktitle = {2021 58th {ACM}/{IEEE} Design Automation Conference ({DAC})},
	author = {Karabulut, Emre and Aysu, Aydin},
	date = {2021-12},
	keywords = {Electromagnetic analysis, Electromagnetic measurements, Fast Fourier transforms, {NIST}, Quantum computing, Side-channel attacks, Software, digital signatures, post-quantum cryptography, side-channel attacks},
}

@online{reddit_ocsp_firefox,
	title = {Firefox - The only browser doing certificate revocation checks right},
	url = {www.reddit.com/r/firefox/comments/1bb89vl/firefox_the_only_browser_doing_certificate/},
	titleaddon = {r/firefox},
	author = {{MorrocMaster}},
	urldate = {2024-10-31},
	date = {2024-03-10},
}

@online{firefox_125_nightly,
	title = {Firefox Nightly 125.0a1, See All New Features, Updates and Fixes},
	url = {https://www.mozilla.org/en-US/firefox/125.0a1/releasenotes/},
	titleaddon = {Mozilla},
	urldate = {2024-10-04},
	date = {2024-02-19},
	langid = {english},
}

@online{first_acme,
	title = {First Let’s Encrypt Free Certificate Goes Live},
	url = {https://threatpost.com/first-lets-encrypt-free-certificate-goes-live/114675/},
	abstract = {Let’s Encrypt hit a major milestone today when its first free and automated cert went live.},
	titleaddon = {threatpost},
	author = {{Michael Mimoso}},
	urldate = {2024-09-22},
	date = {2015-09-15},
}

@online{fix_mtc_length_prefix_1,
	title = {Fix prefix length for {DNSName} by pohlm01 · Pull Request \#2 · bwesterb/mtc},
	url = {https://github.com/bwesterb/mtc/pull/2},
	abstract = {If I'm not mistaken, your implementation diverges from the most recent {RFC} draft in the encoding of the length for {DNSName}. Please have a look at Section 4.1 as a reference.},
	titleaddon = {{GitHub}},
	author = {{Maximilian Pohl}},
	urldate = {2024-11-19},
	langid = {english},
}

@online{crl_sets_effectiveness,
	title = {{GRC}'s {\textbar} Chrome's {CRLSet} Effectiveness Evaluation},
	url = {https://www.grc.com/revocation/crlsets.htm},
	titleaddon = {Gibson Research Corporation},
	urldate = {2024-10-31},
	date = {2014-05-08},
}

@online{certificate_transparency,
	title = {How {CT} Works : Certificate Transparency},
	url = {https://certificate.transparency.dev/howctworks/},
	urldate = {2024-03-23},
}

@online{ocsp_soft_fail,
	title = {How Do Browsers Handle Revoked {SSL}/{TLS} Certificates?},
	url = {https://www.ssl.com/blogs/how-do-browsers-handle-revoked-ssl-tls-certificates/},
	abstract = {Details of current browser programs for checking the revocation status of {SSL}/{TLS} certificates, including a cross-browser test.},
	titleaddon = {{SSL}.com},
	urldate = {2024-09-22},
	date = {2021-02-24},
}

@online{tls_issuance_delay,
	title = {How long does it take to issue an {SSL} certificate?},
	url = {https://support.dnsimple.com/articles/how-long-to-issue-ssl-certificate/},
	titleaddon = {{DNSimple} Help},
	urldate = {2024-10-31},
}

@report{tls1.3_hybrid,
	title = {Hybrid key exchange in {TLS} 1.3},
	url = {https://datatracker.ietf.org/doc/draft-ietf-tls-hybrid-design/09/},
	abstract = {Hybrid key exchange refers to using multiple key exchange algorithms simultaneously and combining the result with the goal of providing security even if all but one of the component algorithms is broken. It is motivated by transition to post-quantum cryptography. This document provides a construction for hybrid key exchange in the Transport Layer Security ({TLS}) protocol version 1.3. Discussion of this work is encouraged to happen on the {TLS} {IETF} mailing list tls@ietf.org or on the {GitHub} repository which contains the draft: https://github.com/dstebila/draft-ietf-tls-hybrid-design.},
	number = {draft-ietf-tls-hybrid-design-09},
	institution = {Internet Engineering Task Force},
	type = {Internet Draft},
	author = {Stebila, Douglas and Fluhrer, Scott and Gueron, Shay},
	date = {2023-09-07},
}

@article{posix,
	title = {{IEEE} Standard for Information Technology–Portable Operating System Interface ({POSIX}({TM})) Base Specifications, Issue 7},
	doi = {10.1109/IEEESTD.2018.8277153},
	pages = {1--3951},
	journaltitle = {{IEEE} Std 1003.1-2017 (Revision of {IEEE} Std 1003.1-2008)},
	date = {2018-01},
	note = {Conference Name: {IEEE} Std 1003.1-2017 (Revision of {IEEE} Std 1003.1-2008)},
}

@inproceedings{falcon_power_analysis,
	location = {Cham},
	title = {Improved Power Analysis Attacks on Falcon},
	doi = {10.1007/978-3-031-30634-1_19},
	abstract = {Falcon is one of the three post-quantum signature schemes selected for standardization by {NIST}. Due to its low bandwidth and high efficiency, Falcon is seen as an attractive option for quantum-safe embedded systems. In this work, we study Falcon’s side-channel resistance by analysing its Gaussian samplers. Our results are mainly twofold.},
	pages = {565--595},
	booktitle = {Advances in Cryptology – {EUROCRYPT} 2023},
	publisher = {Springer Nature Switzerland},
	author = {Zhang, Shiduo and Lin, Xiuhan and Yu, Yang and Wang, Weijia},
	editor = {Hazay, Carmit and Stam, Martijn},
	date = {2023},
	langid = {english},
}

@online{lets_encrypt_end_ocsp,
	title = {Intent to End {OCSP} Service},
	url = {https://letsencrypt.org/2024/07/23/replacing-ocsp-with-crls/},
	abstract = {Today we are announcing our intent to end Online Certificate Status Protocol ({OCSP}) support in favor of Certificate Revocation Lists ({CRLs}) as soon as possible. {OCSP} and {CRLs} are both mechanisms by which {CAs} can communicate certificate revocation information, but {CRLs} have significant advantages over {OCSP}. Let\&rsquo;s Encrypt has been providing an {OCSP} responder since our launch nearly ten years ago. We added support for {CRLs} in 2022.
Websites and people who visit them will not be affected by this change, but some non-browser software might be.},
	titleaddon = {Let's Encrypt},
	author = {{Josh Aas}},
	urldate = {2024-10-31},
	date = {2024-07-23},
	langid = {american},
}

@report{boeyen_internet_2008,
	title = {Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List ({CRL}) Profile},
	url = {https://datatracker.ietf.org/doc/rfc5280},
	abstract = {This memo profiles the X.509 v3 certificate and X.509 v2 certificate revocation list ({CRL}) for use in the Internet. An overview of this approach and model is provided as an introduction. The X.509 v3 certificate format is described in detail, with additional information regarding the format and semantics of Internet name forms. Standard certificate extensions are described and two Internet-specific extensions are defined. A set of required certificate extensions is specified. The X.509 v2 {CRL} format is described in detail along with standard and Internet-specific extensions. An algorithm for X.509 certification path validation is described. An {ASN}.1 module and examples are provided in the appendices. [{STANDARDS}-{TRACK}]},
	number = {{RFC} 5280},
	institution = {Internet Engineering Task Force},
	type = {Request for Comments},
	author = {Boeyen, Sharon and Santesson, Stefan and Polk, Tim and Housley, Russ and Farrell, Stephen and Cooper, David},
	urldate = {2024-09-21},
	date = {2008-05},
	doi = {10.17487/RFC5280},
}

@report{rfc_pki,
	title = {Internet X.509 Public Key Infrastructure Certificate Policy and Certification Practices Framework},
	abstract = {This document presents a framework to assist the writers of certificate policies or certification practice statements for participants within public key infrastructures, such as certification authorities, policy authorities, and communities of interest that wish to rely on certificates. In particular, the framework provides a comprehensive list of topics that potentially (at the writer's discretion) need to be covered in a certificate policy or a certification practice statement. This document supersedes {RFC} 2527.},
	number = {{RFC} 3647},
	institution = {Internet Engineering Task Force},
	type = {Request for Comments},
	author = {Ford, Warwick S. and Chokhani, Santosh and Wu, Stephen S. and Sabett, Randy V. and Merrill, Charles (Chas) R.},
	date = {2003-11},
	doi = {10.17487/RFC3647},
}

@online{lets_encrypt_stats,
	title = {Let's Encrypt Stats},
	url = {https://letsencrypt.org/stats/},
	abstract = {Please note that the Let's Encrypt Growth and Let's Encrypt Certificates Issued Per Day charts are undergoing updates and may not reflect the most recent data.
Let's Encrypt Growth Percentage of Web Pages Loaded by Firefox Using {HTTPS} (14-day moving average, source: Firefox Telemetry)
Let's Encrypt Certificates Issued Per Day},
	urldate = {2024-11-07},
}

@software{chromium_ct_log_list,
	title = {log\_list.json - Chromium Code Search},
	url = {https://source.chromium.org/chromium/chromium/src/+/ddf98abcbd6101328e98ffd05ab07d6e8741f518:components/certificate_transparency/data/log_list.json},
	version = {ddf98ab},
	urldate = {2024-11-14},
}

@online{merkle_town,
	title = {Merkle Town},
	url = {https://ct.cloudflare.com/},
	urldate = {2024-09-21},
}

@report{rfc_mtc,
	title = {Merkle Tree Certificates for {TLS}},
	url = {https://datatracker.ietf.org/doc/draft-davidben-tls-merkle-tree-certs-03},
	abstract = {This document describes Merkle Tree certificates, a new certificate type for use with {TLS}. A relying party that regularly fetches information from a transparency service can use this certificate type as a size optimization over more conventional mechanisms with post- quantum signatures. Merkle Tree certificates integrate the roles of X.509 and Certificate Transparency, achieving comparable security properties with a smaller message size, at the cost of more limited applicability.},
	number = {draft-davidben-tls-merkle-tree-certs-03},
	institution = {Internet Engineering Task Force},
	type = {Internet Draft},
	author = {Benjamin, David and O'Brien, Devon and Westerbaan, Bas},
	urldate = {2024-09-19},
	date = {2024-09-05},
}

@software{go_mtc_ca,
	title = {Merkle Tree Certificates for {TLS}},
	rights = {{BSD}-3-Clause},
	url = {https://github.com/bwesterb/mtc},
	abstract = {Go implementation of Merkle Tree Certificates},
	version = {1f7a83d},
	author = {Westerbaan, Bas and {Maximilian Pohl}},
	date = {2024-11-15},
}

@online{microsoft_drop_tls,
	title = {Modernizing {TLS} connections in Microsoft Edge and Internet Explorer 11},
	url = {https://blogs.windows.com/msedgedev/2018/10/15/modernizing-tls-edge-ie11/},
	abstract = {Update as of 8/14/2020: The plan to disable {TLS} 1.0/1.1 by default is being updated for Internet Explorer and Microsoft Edge Legacy. {TLS} 1.0 and {TLS} 1.1 will not be disabled by default for either browser until Spring of 2021 at the earliest. Organizations that wish to disable {TLS} 1.0 and {TLS} 1.1 before that},
	titleaddon = {Microsoft Edge Blog},
	author = {Blog, Microsoft Edge and Pflug, Kyle},
	urldate = {2024-09-23},
	date = {2018-10-15},
}

@online{chrome_drop_tls,
	title = {Modernizing Transport Security},
	url = {https://security.googleblog.com/2018/10/modernizing-transport-security.html},
	abstract = {Posted by David Benjamin, Chrome networking   *Updated on October 17, 2018 with details about changes in other browsers   {TLS} (Transport Lay...},
	titleaddon = {Google Online Security Blog},
	author = {{David Benjamin}},
	urldate = {2024-09-23},
	date = {2018-10-15},
	langid = {english},
}

@report{fips_204,
	location = {Gaithersburg, {MD}},
	title = {Module-Lattice-Based Digital Signature Standard},
	abstract = {Digital signatures are used to detect unauthorized modifications to data and to authenticate the identity of the signatory. In addition, the recipient of signed data can use a digital signature as evidence in demonstrating to a third party that the signature was, in fact, generated by the claimed signatory. This is known as non-repudiation since the signatory cannot easily repudiate the signature at a later time. This standard specifies {ML}-{DSA}, a set of algorithms that can be used to generate and verify digital signatures. {ML}-{DSA} is believed to be secure, even against adversaries in possession of a large-scale quantum computer.},
	number = {{FIPS} 204},
	institution = {National Institute of Standards and Technology},
	author = {{National Institute of Standards and Technology}},
	date = {2024-08-13},
	doi = {10.6028/NIST.FIPS.204},
}

@online{lets_encrypt_rustls,
	title = {More Memory Safety for Let’s Encrypt: Deploying ntpd-rs},
	url = {https://letsencrypt.org/2024/06/24/ntpd-rs-deployment/},
	shorttitle = {More Memory Safety for Let’s Encrypt},
	abstract = {When we look at the general security posture of Let\&rsquo;s Encrypt, one of the things that worries us most is how much of the operating system and network infrastructure is written in unsafe languages like C and C++. The {CA} software itself is written in memory safe Golang, but from our server operating systems to our network equipment, lack of memory safety routinely leads to vulnerabilities that need patching.
Partially for the sake of Let\&rsquo;s Encrypt, and partially for the sake of the wider Internet, we started a new project called Prossimo in 2020.},
	titleaddon = {Let's Encrypt},
	author = {{Josh Aas}},
	urldate = {2024-11-15},
	date = {2024-06-24},
}

@online{firefox_root_store,
	title = {Mozilla Included {CA} Certificate List},
	url = {https://ccadb.my.salesforce-sites.com/mozilla/IncludedCACertificateReport},
	urldate = {2024-11-06},
	date = {2024-11-06},
}

@online{mtc_fallback_estimate,
	title = {{MTC} Fallback Estimates},
	url = {https://github.com/davidben/merkle-tree-certs/issues/89},
	author = {{Lena Heimberger} and {Bas Westerbaan} and {Devon O'Brien}},
	urldate = {2024-10-31},
	date = {2024-08-26},
}

@online{ocsp_30p_faster,
	title = {{OCSP} Stapling: How {CloudFlare} Just Made {SSL} 30\% Faster},
	url = {https://blog.cloudflare.com/ocsp-stapling-how-cloudflare-just-made-ssl-30},
	shorttitle = {{OCSP} Stapling},
	abstract = {This week {CloudFlare} is announcing several things we're doing to significantly improve the performance of {SSL}. Too few sites are secured with {SSL}. One of the reasons sites don't implement {SSL} is that it can slow down web performance.},
	titleaddon = {The Cloudflare Blog},
	author = {{Matthew Prince}},
	urldate = {2024-09-22},
	date = {2012-10-29},
}

@inproceedings{raavi_performance_2021,
	title = {Performance Characterization of Post-Quantum Digital Certificates},
	url = {https://ieeexplore.ieee.org/abstract/document/9522179},
	doi = {10.1109/ICCCN52240.2021.9522179},
	abstract = {Public Key Infrastructure ({PKI}) generates and distributes digital certificates to provide the root of trust for securing digital networking systems. To continue securing digital networking in the quantum era, {PKI} should transition to use quantum-resistant cryptographic algorithms. The cryptography community is developing quantum-resistant primitives/algorithms, studying, and analyzing them for cryptanalysis and improvements. National Institute of Standards and Technology ({NIST}) selected finalist algorithms for the post-quantum digital signature cipher standardization, which are Dilithium, Falcon, and Rainbow. We study and analyze the feasibility and the processing performance of these algorithms in memory/size and time/speed when used for {PKI}, including the key generation from the {PKI} end entities (e.g., a {HTTPS}/{TLS} server), the signing, and the certificate generation by the certificate authority within the {PKI}. The transition to post-quantum from the classical ciphers incur changes in the parameters in the {PKI}, for example, Rainbow I significantly increases the certificate size by 163 times when compared with {RSA} 3072. Nevertheless, we learn that the current X.509 supports the {NIST} post-quantum digital signature ciphers and that the ciphers can be modularly adapted for {PKI}. According to our empirical implementations-based study, the post-quantum ciphers can increase the certificate verification time cost compared to the current classical cipher and therefore the verification overheads require careful considerations when using the post-quantum-cipher-based certificates.},
	eventtitle = {2021 International Conference on Computer Communications and Networks ({ICCCN})},
	pages = {1--9},
	booktitle = {2021 International Conference on Computer Communications and Networks ({ICCCN})},
	author = {Raavi, Manohar and Chandramouli, Pranav and Wuthier, Simeon and Zhou, Xiaobo and Chang, Sang-Yoon},
	urldate = {2024-02-16},
	date = {2021-07},
	note = {{ISSN}: 2637-9430},
	keywords = {Ciphers, Computer architecture, Digital Certificate, {NIST}, {PKI}, Post-Quantum Cryptography, Public key, Quantum computing, Quantum-Resistant Cryptography, Servers, Standardization},
}

@software{github_mtc_verifier,
	title = {pohlm01/mtc-verifier},
	url = {https://github.com/pohlm01/mtc-verifier},
	abstract = {Parsing and verifying Merkle Tree Certificates as described in {RFC} draft "Merkle Tree Certificates for {TLS}"},
	version = {3b72ecc},
	author = {{Maximilian Pohl}},
	urldate = {2024-11-15},
	date = {2024-11-15},
	keywords = {post-quantum, tls, tls13},
}

@misc{czajkowski_post-quantum_2017,
	title = {Post-quantum security of the sponge construction},
	url = {https://eprint.iacr.org/2017/771},
	abstract = {We investigate the post-quantum security of hash functions based on the sponge construction. A crucial property for hash functions in the post-quantum setting is the collapsing property (a strengthening of collision-resistance). We show that the sponge construction is collapsing (and in consequence quantum collision-resistant) under suitable assumptions about the underlying block function. In particular, if the block function is a random function or a (non-invertible) random permutation, the sponge construction is collapsing.},
	number = {2017/771},
	author = {Czajkowski, Jan and Bruinderink, Leon Groot and Hülsing, Andreas and Schaffner, Christian and Unruh, Dominique},
	urldate = {2024-09-19},
	date = {2017},
	note = {Publication info: Preprint. {MINOR} revision.},
	keywords = {Post-quantum cryptography, Sponge construction, collapsing, collision-resistance, hash functions, quantum adversaries, quantum attack},
}

@inproceedings{kem_tls,
	location = {New York, {NY}, {USA}},
	title = {Post-Quantum {TLS} Without Handshake Signatures},
	isbn = {978-1-4503-7089-9},
	doi = {10.1145/3372297.3423350},
	series = {{CCS} '20},
	abstract = {We present {KEMTLS}, an alternative to the {TLS} 1.3 handshake that uses key-encapsulation mechanisms ({KEMs}) instead of signatures for server authentication. Among existing post-quantum candidates, signature schemes generally have larger public key/signature sizes compared to the public key/ciphertext sizes of {KEMs}: by using an {IND}-{CCA}-secure {KEM} for server authentication in post-quantum {TLS}, we obtain multiple benefits. A size-optimized post-quantum instantiation of {KEMTLS} requires less than half the bandwidth of a size-optimized post-quantum instantiation of {TLS} 1.3. In a speed-optimized instantiation, {KEMTLS} reduces the amount of server {CPU} cycles by almost 90\% compared to {TLS} 1.3, while at the same time reducing communication size, reducing the time until the client can start sending encrypted application data, and eliminating code for signatures from the server's trusted code base.},
	pages = {1461--1480},
	booktitle = {Proceedings of the 2020 {ACM} {SIGSAC} Conference on Computer and Communications Security},
	publisher = {Association for Computing Machinery},
	author = {Schwabe, Peter and Stebila, Douglas and Wiggers, Thom},
	date = {2020-11-02},
}

@online{firefox_drop_tls,
	title = {Removing Old Versions of {TLS}},
	url = {https://blog.mozilla.org/security/2018/10/15/removing-old-versions-of-tls},
	abstract = {In March of 2020, Firefox will remove support for {TLS} 1.0 and {TLS} 1.1.},
	titleaddon = {Mozilla Security Blog},
	author = {Thomson, Martin},
	urldate = {2024-09-23},
	date = {2018-10-15},
}

@online{mtc_use_mldsa,
	title = {Replace Dilithium with {ML}-{DSA} by pohlm01 · Pull Request \#9 · bwesterb/mtc},
	url = {https://github.com/bwesterb/mtc/pull/9},
	abstract = {I had difficulties finding a compatible Rust implementation of the round 3 Dilithium implementation and propose switching to the now standardized successor {ML}-{DSA} for better compatibility.
As it is...},
	titleaddon = {{GitHub}},
	urldate = {2024-11-19},
	langid = {english},
}

@software{go_root_store,
	title = {root\_linux.go {\textbar} golang/go},
	url = {https://github.com/golang/go/blob/c759ea7471de5a62c88325981e8c86beab78bed8/src/crypto/x509/root_linux.go},
	abstract = {The Go programming language. Contribute to golang/go development by creating an account on {GitHub}.},
	version = {b01cb72},
	author = {{Filippo Valsorda}},
	urldate = {2024-11-13},
}

@online{linux_kernel_rust,
	title = {Rust — The Linux Kernel documentation},
	url = {https://docs.kernel.org/rust/index.html#the-rust-experiment},
	urldate = {2024-03-13},
}

@online{rust,
	title = {Rust Programming Language},
	url = {https://www.rust-lang.org/},
	abstract = {A language empowering everyone to build reliable and efficient software.},
	urldate = {2024-03-13},
	langid = {american},
}

@online{rustls_openssl_nginx,
	title = {Rustls Gains {OpenSSL} and Nginx Compatibility},
	url = {https://www.memorysafety.org/blog/rustls-nginx-compatibility-layer/},
	abstract = {The Rustls {TLS} library can now be used with Nginx via an {OpenSSL} compatibility layer. This means that Nginx users can switch from {OpenSSL} to Rustls with minimal effort - users can simply swap in a new {TLS} library without needing to modify or recompile Nginx.
We have targeted Nginx versions greater than 1.18 on Ubuntu 22.04 or newer for initial support. Here's how easy it is to get going on x86\_64 Ubuntu Linux 22.},
	titleaddon = {Prossimo},
	author = {{Josh Aas}},
	urldate = {2024-11-15},
	date = {2024-05-08},
}

@software{github_rustls,
	title = {rustls/rustls: A modern {TLS} library in Rust},
	url = {https://github.com/rustls/rustls},
	version = {b553880},
	author = {{Joe Birr-Pixton} and {Dirkjan Ochtman} and {Daniel McCarney} and {Brian Smith} and {Jacob Hoffman-Andrews} and {Jorge Aparicio} and {Benjamin Saunders} and {Christian Poveda Ruiz} and {Adolfo Ochagavía} and {Mend Renovate}},
	urldate = {2024-11-15},
	date = {2024-10-17},
}

@software{github_rustls_webpki,
	title = {rustls/webpki: {WebPKI} X.509 Certificate Validation in Rust},
	url = {https://github.com/rustls/webpki},
	abstract = {{WebPKI} X.509 Certificate Validation in Rust},
	version = {fc04aaf},
	publisher = {rustls},
	author = {{Brian Smith} and {Daniel McCarney} and {Dirkjan Ochtman} and {Joe Birr-Pixton} and {Jasper Patterson} and {Alex Gaynor} and {Rafael Fernández López} and {Stepan Koltsov} and {Sietse Ringers}},
	urldate = {2024-11-15},
	date = {2024-11-02},
}

@jurisdiction{apple_45_days_cert,
	title = {{SC}-081: Introduce Schedule of Reducing Validity and Data Reuse Periods by clintwilson},
	url = {https://github.com/cabforum/servercert/pull/553},
	author = {{Clint Wilson}},
	urldate = {2024-10-30},
	date = {2024-10-10},
}

@report{google_view_rust,
	title = {Secure by Design: Google's Perspective on Memory Safety},
	institution = {Google Security Engineering},
	author = {Rebert, Alex and Kern, Christoph},
	date = {2024},
}

@book{ssl_tls_book,
	edition = {Third edition},
	title = {{SSL} and {TLS}: Theory and Practice},
	isbn = {978-1-68569-015-1},
	series = {Artech House information security and privacy series},
	shorttitle = {{SSL} and {TLS}},
	pagetotal = {352},
	publisher = {Artech House},
	author = {Oppliger, Rolf},
	date = {2023},
}

@online{firefox_telemetry,
	title = {{SSL} Ratios (public) - Mozilla Data Documentation},
	url = {https://docs.telemetry.mozilla.org/datasets/other/ssl/reference.html},
	urldate = {2024-10-04},
}

@report{fips_205,
	location = {Gaithersburg, {MD}},
	title = {Stateless Hash-Based Digital Signature Standard},
	abstract = {This standard specifies the stateless hash-based digital signature algorithm ({SLH}-{DSA}). Digital signatures are used to detect unauthorized modifications to data and to authenticate the identity of the signatory. In addition, the recipient of signed data can use a digital signature as evidence in demonstrating to a third party that the signature was, in fact, generated by the claimed signatory. This is known as non-repudiation since the signatory cannot easily repudiate the signature at a later time. {SLH}-{DSA} is based on {SPHINCS}+, which was selected for standardization as part of the {NIST} Post-Quantum Cryptography Standardization process.},
	number = {{FIPS} 205},
	institution = {National Institute of Standards and Technology},
	author = {{National Institute of Standards and Technology}},
	date = {2024-08-13},
	doi = {10.6028/NIST.FIPS.205},
}

@online{mozilla_crlite,
	title = {The End-to-End Design of {CRLite}},
	url = {https://blog.mozilla.org/security/2020/01/09/crlite-part-2-end-to-end-design},
	abstract = {The end-to-end design of {CRLite} gives us a new way to handle revocations in the Web {PKI}},
	titleaddon = {Mozilla Security Blog},
	author = {Jones, J. C.},
	urldate = {2024-11-06},
	date = {2020-01-09},
}

@online{bas_westerbaan_state_2024,
	title = {The state of the post-quantum Internet},
	url = {https://blog.cloudflare.com/pq-2024},
	abstract = {Today, nearly two percent of all {TLS} 1.3 connections established with Cloudflare are secured with post-quantum cryptography. What once was the topic of futuristic tech demos will soon be the new security baseline for the Internet. In this blog post we’ll take measure of where we are now in early 2024, what to expect for the coming years, and what you can do today.},
	titleaddon = {The Cloudflare Blog},
	author = {{Bas Westerbaan}},
	urldate = {2024-03-13},
	date = {2024-03-05},
}

@report{rfc_tls13,
	title = {The Transport Layer Security ({TLS}) Protocol Version 1.3},
	abstract = {This document specifies version 1.3 of the Transport Layer Security ({TLS}) protocol. {TLS} allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery. This document updates {RFCs} 5705 and 6066, and obsoletes {RFCs} 5077, 5246, and 6961. This document also specifies new requirements for {TLS} 1.2 implementations.},
	number = {{RFC} 8446},
	institution = {Internet Engineering Task Force},
	type = {Request for Comments},
	author = {Rescorla, Eric},
	date = {2018-08},
	doi = {10.17487/RFC8446},
}

@online{david_adrian_tldrfail_2023,
	title = {tldr.fail},
	url = {https://tldr.fail/},
	author = {{David Adrian} and {Emily Stark} and {Ryan Dickson}},
	urldate = {2024-03-10},
	date = {2023-09-28},
}

@report{rfc_tai,
	title = {{TLS} Trust Anchor Identifiers},
	url = {https://datatracker.ietf.org/doc/draft-beck-tls-trust-anchor-ids-02},
	abstract = {This document defines the {TLS} Trust Anchors extension, a mechanism for relying parties to convey trusted certification authorities. It describes individual certification authorities more succinctly than the {TLS} Certificate Authorities extension. Additionally, to support {TLS} clients with many trusted certification authorities, it supports a mode where servers describe their available certification paths and the client selects from them. Servers may describe this during connection setup, or in {DNS} for lower latency.},
	number = {draft-beck-tls-trust-anchor-ids-02},
	institution = {Internet Engineering Task Force},
	type = {Internet Draft},
	author = {Beck, Bob and {Bob Beck} and Benjamin, David and O'Brien, Devon},
	urldate = {2024-11-15},
	date = {2024-10-10},
}

@report{rfc_ocsp_stapling,
	title = {Transport Layer Security ({TLS}) Extensions: Extension Definitions},
	shorttitle = {Transport Layer Security ({TLS}) Extensions},
	abstract = {This document provides specifications for existing {TLS} extensions. It is a companion document for {RFC} 5246, "The Transport Layer Security ({TLS}) Protocol Version 1.2". The extensions specified are server\_name, max\_fragment\_length, client\_certificate\_url, trusted\_ca\_keys, truncated\_hmac, and status\_request. [{STANDARDS}-{TRACK}]},
	number = {{RFC} 6066},
	institution = {Internet Engineering Task Force},
	type = {Request for Comments},
	author = {Eastlake 3rd, Donald E.},
	date = {2011-01},
	doi = {10.17487/RFC6066},
}

@software{trillian_firmware_transparency,
	title = {Trilian - Firmware Transparency {\textbar} google/trillian-examples},
	url = {https://github.com/google/trillian-examples/tree/ded41b7d3a733970b3a40db93e16f692ee9ea62f/binary_transparency/firmware},
	abstract = {A place to store some examples which use Trillian {APIs} to build things. - google/trillian-examples},
	version = {ded41b7},
	urldate = {2024-11-13},
	date = {2024-11-13},
}

@online{add_array_embedding,
	title = {Use `{\textless}1..2{\textasciicircum}24-1{\textgreater}` encoding for all certificate types by pohlm01 · Pull Request \#95 · davidben/merkle-tree-certs},
	url = {https://github.com/davidben/merkle-tree-certs/pull/95},
	abstract = {In favor of an easier implementation, I propose to change the {CertificateEntry} {TLS} message such that the Bikeshed certificate is embedded in a length prefixed array. It makes parsing the packets se...},
	titleaddon = {{GitHub}},
	author = {{Maximilian Pohl}},
	urldate = {2024-11-19},
	langid = {english},
}

@report{rfc_raw_public_keys,
	title = {Using Raw Public Keys in Transport Layer Security ({TLS}) and Datagram Transport Layer Security ({DTLS})},
	url = {https://datatracker.ietf.org/doc/rfc7250},
	abstract = {This document specifies a new certificate type and two {TLS} extensions for exchanging raw public keys in Transport Layer Security ({TLS}) and Datagram Transport Layer Security ({DTLS}). The new certificate type allows raw public keys to be used for authentication.},
	number = {{RFC} 7250},
	institution = {Internet Engineering Task Force},
	type = {Request for Comments},
	author = {Wouters, Paul and Tschofenig, Hannes and Gilmore, John {IETF} and Weiler, Samuel and Kivinen, Tero},
	urldate = {2024-03-28},
	date = {2014-06},
	doi = {10.17487/RFC7250},
}

@online{okta_pki,
	title = {What Is Public Key Infrastructure ({PKI}) \& How Does It Work? {\textbar} Okta},
	url = {https://www.okta.com/identity-101/public-key-infrastructure/},
	shorttitle = {What Is Public Key Infrastructure ({PKI}) \& How Does It Work?},
	abstract = {Public key infrastructure ({PKI}) is defined as anything used to manage public key encryption methods. Learn more about how to create and use {PKI} here.},
	urldate = {2024-09-21},
	date = {2024-08-29},
}

@online{lets_encrypt_cert_lifetime,
	title = {Why ninety-day lifetimes for certificates?},
	url = {https://letsencrypt.org/2015/11/09/why-90-days.html},
	shorttitle = {Why ninety-day lifetimes for certificates?},
	abstract = {We’re sometimes asked why we only offer certificates with ninety-day lifetimes. People who ask this are usually concerned that ninety days is too short and wish we would offer certificates lasting a year or more, like some other {CAs} do. Ninety days is nothing new on the Web. According to Firefox Telemetry, 29\% of {TLS} transactions use ninety-day certificates. That’s more than any other lifetime. From our perspective, there are two primary advantages to such short certificate lifetimes:},
	titleaddon = {Let's Encrypt},
	author = {{Josh Aas}},
	urldate = {2024-09-22},
	date = {2015-11-09},
}

@online{cloudflare_radar,
	title = {Worldwide Adoption \& Usage {\textbar} Cloudflare Radar},
	url = {https://radar.cloudflare.com/adoption-and-usage},
	abstract = {Global Adoption \& Usage trends and insights.},
	urldate = {2024-09-23},
}

@report{rfc_ocsp,
	title = {X.509 Internet Public Key Infrastructure Online Certificate Status Protocol - {OCSP}},
	abstract = {This document specifies a protocol useful in determining the current status of a digital certificate without requiring {CRLs}. [{STANDARDS}-{TRACK}]},
	number = {{RFC} 2560},
	institution = {Internet Engineering Task Force},
	type = {Request for Comments},
	author = {Galperin, Slava and Adams, Carlisle and Myers, Michael and Ankney, Rich and Malpani, Ambarish N.},
	date = {1999-06},
	doi = {10.17487/RFC2560},
}

@online{chrome_kyber,
	title = {X25519Kyber768 key encapsulation for {TLS} - Chrome Platform Status},
	url = {https://chromestatus.com/feature/5257822742249472},
	author = {{David Adrian}},
	urldate = {2024-10-04},
	date = {2023-04-28},
}
